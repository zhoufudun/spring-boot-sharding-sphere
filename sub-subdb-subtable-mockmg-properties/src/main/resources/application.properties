##server.port=8080
#
##========这里换种方式，采用java配置实现分库分表==================
#
#指定mybatis信息
mybatis.config-location=classpath:mybatis-config.xml
#打印sql
spring.shardingsphere.props.sql.show=true

spring.shardingsphere.datasource.names=subdb1,subdb2

spring.shardingsphere.datasource.subdb1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.subdb1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.subdb1.url=jdbc:mysql://localhost:3306/subdb1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.subdb1.username=root
spring.shardingsphere.datasource.subdb1.password=123456

spring.shardingsphere.datasource.subdb2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.subdb2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.subdb2.url=jdbc:mysql://localhost:3306/subdb2?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.subdb2.username=root
spring.shardingsphere.datasource.subdb2.password=123456

# 根据年龄分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=age
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=subdb${(age % 2)+1}

# 自定义分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.my-table-algorithm.type=CLASS_BASED
# 分片策略complex不能随便改变类型
spring.shardingsphere.rules.sharding.sharding-algorithms.my-table-algorithm.props.strategy=complex
# 分片算法类
spring.shardingsphere.rules.sharding.sharding-algorithms.my-table-algorithm.props.algorithm-class-name=com.oujiong.ShardingAlgorithm.MyTableKeysShardingAlgorithm
# 还可为algorithm-class-name配置一个属性的值，这里不用，留着
spring.shardingsphere.rules.sharding.sharding-algorithms.my-table-algorithm.props.aaa=oneProperties

# 分表策略
# 数据节点：数据库.分片表
spring.shardingsphere.rules.sharding.tables.t_user_.actual-data-nodes=subdb${1..2}.t_user_${1..2}_${0..1}
# 分表策略
spring.shardingsphere.rules.sharding.tables.t_user_.table-strategy.complex.sharding-columns=birthdayMonth , age
spring.shardingsphere.rules.sharding.tables.t_user_.table-strategy.complex.sharding-algorithm-name=my-table-algorithm
#



#server.port=8080
#mybatis.config-location=classpath:mybatis-config.xml
#spring.shardingsphere.datasource.names=subdb1 , subdb2
#spring.shardingsphere.datasource.subdb1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.subdb1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.subdb1.jdbc-url=jdbc:mysql://127.0.0.1:3306/subdb1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.subdb1.username=root
#spring.shardingsphere.datasource.subdb1.password=123456
#spring.shardingsphere.datasource.subdb2.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.subdb2.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.subdb2.jdbc-url=jdbc:mysql://127.0.0.1:3306/subdb2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.subdb2.username=root
#spring.shardingsphere.datasource.subdb2.password=123456
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_database_complex_inline_algorithms.type=inline
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_database_complex_inline_algorithms.props.sharding-columns=age
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_database_complex_inline_algorithms.props.algorithm-expression=subdb${(age % 2)+1}
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_database_complex_inline_algorithms.props.allow-range-query-with-inline-sharding=false
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_table_complex_inline.type=COMPLEX_INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_table_complex_inline.props.sharding-columns=birthdayMonth, age
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_table_complex_inline.props.algorithm-expression=t_user_$->{birthdayMonth%2}_$->{age%2}
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_user_table_complex_inline.props.allow-range-query-with-inline-sharding=false
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=subdb$->{1..2}.t_user_${0..2}
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.complex.shardingColumns=age
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.complex.sharding-algorithm-name=t_user_database_complex_inline_algorithms
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.complex.shardingColumns=birthdayMonth, age
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.complex.sharding-algorithm-name=t_user_table_complex_inline
#spring.shardingsphere.props.sql-show=true

